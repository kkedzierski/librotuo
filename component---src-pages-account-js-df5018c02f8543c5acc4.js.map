{"version":3,"sources":["webpack:///./src/components/account/Account.js","webpack:///./src/pages/account.js","webpack:///./src/components/booksPage/BookCard.js"],"names":["Account","thumbnail","title","pageCount","language","authors","publisher","description","previewLink","selfLinkForBookshelf","user","getProfile","AccountContainer","Gap","given_name","UserPictureContainer","src","picture","alt","AccountButtonContainer","onClick","e","logout","preventDefault","BookShelfContainer","BookCard","styled","div","account","isAuthenticated","Layout","login","useState","showResults","setShowResults","handleBookDetails","Card","style","width","CardImg","height","cursor","CardBody","CardTitle","h3"],"mappings":"wLA6CeA,EAxCC,SAAC,GAQc,IARbC,EAQY,EARZA,UACdC,EAO0B,EAP1BA,MACAC,EAM0B,EAN1BA,UACAC,EAK0B,EAL1BA,SACAC,EAI0B,EAJ1BA,QACAC,EAG0B,EAH1BA,UACAC,EAE0B,EAF1BA,YACAC,EAC0B,EAD1BA,YACAC,EAA0B,EAA1BA,qBACMC,EAAOC,cAEb,OACI,kBAACC,EAAD,KACI,kBAACC,EAAD,MACA,qCAAWH,EAAKI,YAChB,kBAACC,EAAD,KACI,yBAAKC,IAAKN,EAAKO,QAASC,IAAI,UAExB,kBAACC,EAAD,KACA,4BAAQC,QAAS,SAAAC,GACbC,cACAD,EAAEE,mBAFN,gBAKR,kBAACC,EAAD,KACI,0CACA,kBAACC,EAAA,EAAD,CAAYxB,UAAWA,EACXC,MAAOA,EACPC,UAAaA,EACbC,SAAUA,EACVC,QAASA,EACTC,UAAWA,EACXC,YAAcA,EACdC,YAAaA,EACbC,qBAAsBA,OAQ5CG,EAAmBc,IAAOC,IAAV,gFAAGD,CAAH,kEAOhBb,EAAMa,IAAOC,IAAV,mEAAGD,CAAH,kBAGHX,EAAuBW,IAAOC,IAAV,oFAAGD,CAAH,oCAKpBF,EAAqBE,IAAOC,IAAV,kFAAGD,CAAH,+DAMlBP,EAAyBO,IAAOC,IAAV,sFAAGD,CAAH,gJC9CbE,UAdC,WACZ,OAAKC,cAMD,kBAACC,EAAA,EAAD,KACQ,kBAAC,IAAD,CAAK5B,MAAM,YACX,kBAAC,EAAD,QAPR6B,cACO,8C,kCCXf,iDAgDeN,IA7CE,SAAC,GAUX,IATHxB,EASE,EATFA,UACAC,EAQE,EARFA,MACAC,EAOE,EAPFA,UACAC,EAME,EANFA,SACAC,EAKE,EALFA,QACAC,EAIE,EAJFA,UACAC,EAGE,EAHFA,YACAC,EAEE,EAFFA,YACAC,EACE,EADFA,qBACE,EAEoCuB,oBAAS,GAAxCC,EAFL,KAEkBC,EAFlB,KAGIC,EAAoB,kBAAMD,GAAe,IAC/C,OACA,kBAACE,EAAD,CAAMC,MAAO,CAACC,MAAO,UAEjB,kBAACC,EAAD,CAASnB,QAASe,GACd,yBAAKnB,IAAKf,EAAWiB,IAAKhB,EACtBmC,MAAO,CAAEC,MAAO,OAAQE,OAAQ,QAASC,OAAQ,cAGzD,kBAACC,EAAD,KAEA,4BAAQtB,QAASe,GAAjB,aAEI,kBAACQ,EAAD,KAAYzC,IAEd+B,EACF,kBAAC,IAAD,CACAhC,UAAWA,EACXC,MAAOA,EACPC,UAAaA,EACbC,SAAUA,EACVC,QAASA,EACTC,UAAWA,EACXC,YAAcA,EACdC,YAAaA,EACbC,qBAAsBA,IACb,OAQjB,IAAMkC,EAAYjB,IAAOkB,GAAV,sEAAGlB,CAAH,qBAITU,EAAOV,IAAOC,IAAV,iEAAGD,CAAH,wEAQJa,EAAUb,IAAOC,IAAV,oEAAGD,CAAH,mJAePgB,EAAWhB,IAAOC,IAAV,qEAAGD,CAAH","file":"component---src-pages-account-js-df5018c02f8543c5acc4.js","sourcesContent":["import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { getProfile, logout } from '../../utils/auth'\r\nimport BookCard from '../booksPage/BookCard';\r\n\r\nconst Account = ({thumbnail,\r\n    title,\r\n    pageCount,\r\n    language,\r\n    authors,\r\n    publisher,\r\n    description,\r\n    previewLink,\r\n    selfLinkForBookshelf}) => {\r\n    const user = getProfile();\r\n    \r\n    return (\r\n        <AccountContainer>\r\n            <Gap/>\r\n            <h2>Cześć {user.given_name}</h2>\r\n            <UserPictureContainer>\r\n                <img src={user.picture} alt=\"user\"/>\r\n            </UserPictureContainer>\r\n                    <AccountButtonContainer>\r\n                    <button onClick={e => {\r\n                        logout()\r\n                        e.preventDefault();\r\n                        }}>Wyloguj się</button>\r\n                        </AccountButtonContainer>\r\n            <BookShelfContainer>\r\n                <h2>Twój regał</h2>\r\n                <BookCard   thumbnail={thumbnail} \r\n                            title={title}\r\n                            pageCount = {pageCount}\r\n                            language={language}\r\n                            authors={authors}\r\n                            publisher={publisher}\r\n                            description= {description}\r\n                            previewLink={previewLink}\r\n                            selfLinkForBookshelf={selfLinkForBookshelf}/>\r\n            </BookShelfContainer>\r\n        </AccountContainer>\r\n    )\r\n}\r\n\r\nexport default Account\r\n\r\nconst AccountContainer = styled.div`\r\n    background: #0c0c0c;\r\n    color: #fff;\r\n    padding: 2rem;\r\n    margin-top: -80px;\r\n`\r\n\r\nconst Gap = styled.div`\r\n    height: 80px;\r\n`\r\nconst UserPictureContainer = styled.div`\r\n    display: flex;\r\n    padding: 0.5rem 0;\r\n`\r\n\r\nconst BookShelfContainer = styled.div`\r\n    text-align: center;\r\n    justify-content: center;\r\n    margin-top: 1rem;\r\n`\r\n\r\nconst AccountButtonContainer = styled.div`\r\n    button{\r\n        border: none;\r\n        color: white;\r\n        background-color:  #077BF1;\r\n        cursor: pointer;\r\n        height: 100%;\r\n        padding: 0.5rem;\r\n    }\r\n\r\n    button:hover{\r\n        background-color: #F26A2E;\r\n    }\r\n`","import React from 'react'\r\nimport Layout from \"../components/Layout\"\r\nimport SEO from '../components/seo'\r\nimport { login, isAuthenticated} from '../utils/auth'\r\nimport Account from '../components/account/Account'\r\n\r\n\r\n\r\nconst account = () => {\r\n    if (!isAuthenticated()){\r\n        login();\r\n        return <p>Ładowanie...</p>;\r\n    }\r\n\r\n    return (\r\n        <Layout>\r\n                <SEO title=\"account\"/>\r\n                <Account />\r\n        </Layout>\r\n    )\r\n}\r\n\r\nexport default account\r\n","import React, {useState} from 'react'\r\nimport styled from 'styled-components'\r\nimport BookModal from '../BookModal'\r\nconst BookCard = ({\r\n    thumbnail,\r\n    title,\r\n    pageCount,\r\n    language,\r\n    authors,\r\n    publisher,\r\n    description,\r\n    previewLink,\r\n    selfLinkForBookshelf\r\n}) => {\r\n\r\n    const [showResults, setShowResults] = useState(false)\r\n    const handleBookDetails = () => setShowResults(true)\r\n    return( \r\n    <Card style={{width: '233px'}}>\r\n        \r\n        <CardImg onClick={handleBookDetails}> \r\n            <img src={thumbnail} alt={title} \r\n                style={{ width: '100%', height: '300px', cursor: 'pointer' }} />\r\n        </CardImg>\r\n       \r\n        <CardBody>\r\n\r\n        <button onClick={handleBookDetails}>\r\n             Open book</button>\r\n            <CardTitle>{title}</CardTitle>\r\n        </CardBody> \r\n        { showResults ? \r\n        <BookModal \r\n        thumbnail={thumbnail} \r\n        title={title}\r\n        pageCount = {pageCount}\r\n        language={language}\r\n        authors={authors}\r\n        publisher={publisher}\r\n        description= {description}\r\n        previewLink={previewLink}\r\n        selfLinkForBookshelf={selfLinkForBookshelf}\r\n            /> : null }\r\n        \r\n    </Card>\r\n    )\r\n}\r\n\r\nexport default BookCard\r\n\r\nconst CardTitle = styled.h3`\r\n    padding: 0.5rem;\r\n`\r\n\r\nconst Card = styled.div`\r\n    border-style: ridge;\r\n    padding: 0.5rem;\r\n    width: 100%;\r\n    transition: 0.2s ease;\r\n\r\n`\r\n\r\nconst CardImg = styled.div`\r\n    filter: brightness(70%);\r\n    transition: 0.4s cubic-bezier(0.075, 0.82, 0.165, 1);\r\n\r\n    &:hover{\r\n        filter: brightness(100%);\r\n        // cursor: pointer;\r\n    }\r\n\r\n    a > img{\r\n        padding: 1rem 0;\r\n        width: 100px;\r\n    }\r\n    \r\n`\r\nconst CardBody = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n\r\n    button{\r\n        border: none;\r\n        color: white;\r\n        background-color:  #077BF1;\r\n        cursor: pointer;\r\n        height: 100%;\r\n        padding: 0.5rem;\r\n    }\r\n    \r\n    button:hover{\r\n        background-color: #F26A2E;\r\n    }\r\n    \r\n`"],"sourceRoot":""}